version: '3.5'
services:

  i2b2c-web:
    image: i2b2/i2b2c-web:${I2B2_WEB_TAG} 
    container_name: i2b2c-web
    ports:
      - "80:80"
      - "444:443"
    command: /run-httpd.sh localhost
    depends_on:
      - i2b2-wildfly
    networks:
      - i2b2-net
  i2b2-etl:
        image:  i2b2/i2b2-etl:${I2B2_ETL_TAG}
        container_name: i2b2-etl
          
        environment:

          - CRC_DB_HOST=${I2B2_DS_CRC_IP}
          - CRC_DB_PORT=${I2B2_DS_CRC_PORT}
          - CRC_DB_USER=${I2B2_DS_CRC_USER}
          - CRC_DB_PASS=${I2B2_DS_CRC_PASS}
          - CRC_DB_NAME=${I2B2_DS_CRC_DB}
          - CRC_DB_TYPE=${I2B2_DS_CRC_DB_TYPE}

          - ONT_DB_HOST=${I2B2_DS_ONT_IP}
          - ONT_DB_PORT=${I2B2_DS_ONT_PORT}
          - ONT_DB_USER=${I2B2_DS_ONT_USER}
          - ONT_DB_PASS=${I2B2_DS_ONT_PASS}
          - ONT_DB_NAME=${I2B2_DS_ONT_DB}
          - ONT_DB_TYPE=${I2B2_DS_ONT_DB_TYPE}
            
          - PM_DB_HOST=${I2B2_DS_PM_IP}
          - PM_DB_PASS=${I2B2_DS_PM_PASS}
          - PM_DB_USER=${I2B2_DS_PM_USER}
          - PM_DB_PORT=${I2B2_DS_PM_PORT}
          - PM_DB_NAME=${I2B2_DS_PM_DB}
          - PM_DB_TYPE=${I2B2_DS_PM_DB_TYPE}

          - HIVE_DB_HOST=${I2B2_DS_HIVE_IP}
          - HIVE_DB_PORT=${I2B2_DS_HIVE_PORT}
          - HIVE_DB_USER=${I2B2_DS_HIVE_USER}
          - HIVE_DB_PASS=${I2B2_DS_HIVE_PASS}
          - HIVE_DB_NAME=${I2B2_DS_HIVE_DB}
          - HIVE_DB_TYPE=${I2B2_DS_HIVE_DB_TYPE}

          - PG_DB_NAME=${I2B2_DS_PG_DB}

          - BCP_DELIMITER=${I2B2_DS_BCP_DELIMITER}
          - CSV_DELIMITER=${I2B2_DS_CSV_DELIMITER}

          - DB_USER=${I2B2_DS_USER}
          - DB_PASSWORD=${I2B2_DS_PASSWORD}

        stdin_open: true
        tty: true
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./importdata:/usr/src/app/importdata
        ports:
            - 5000:5000
        networks:
            - i2b2-net
        command: bash -c " sleep ${I2B2_DB_TIMER} &&
            python -m i2b2_cdi project password -c etl-pgsql.env --user demo --password $I2B2_ROOT_PASSWORD
            && python -m i2b2_cdi project password -c etl-pgsql.env --user i2b2 --password $I2B2_ROOT_PASSWORD
            && python -m i2b2_cdi project upgrade -c etl-pgsql.env
            && python -m i2b2_cdi.loader.i2b2_cdi_app "
        depends_on:
            - i2b2c-web

  i2b2-wildfly:
    image: i2b2/i2b2-wildfly:${I2B2_WILDFLY_TAG}
    container_name: i2b2-wildfly
    environment:
      - DS_TYPE=${I2B2_DS_TYPE}
      - DS_IP=${I2B2_DS_IP}
      - DS_PORT=${I2B2_DS_PORT}
      
      - DS_CRC_IP=${I2B2_DS_CRC_IP}
      - DS_CRC_PORT=${I2B2_DS_CRC_PORT}
      - DS_CRC_USER=${I2B2_DS_CRC_USER}
      - DS_CRC_PASS=${I2B2_DS_CRC_PASS}
      - DS_CRC_DB=${I2B2_DS_CRC_DB}
      
      - DS_ONT_IP=${I2B2_DS_ONT_IP}
      - DS_ONT_PORT=${I2B2_DS_ONT_PORT}
      - DS_ONT_USER=${I2B2_DS_ONT_USER}
      - DS_ONT_PASS=${I2B2_DS_ONT_PASS}
      - DS_ONT_DB=${I2B2_DS_ONT_DB}

      - DS_PM_IP=${I2B2_DS_PM_IP}
      - DS_PM_PORT=${I2B2_DS_PM_PORT}
      - DS_PM_USER=${I2B2_DS_PM_USER}
      - DS_PM_PASS=${I2B2_DS_PM_PASS}
      - DS_PM_DB=${I2B2_DS_PM_DB}

      - DS_HIVE_IP=${I2B2_DS_HIVE_IP}
      - DS_HIVE_PORT=${I2B2_DS_HIVE_PORT}
      - DS_HIVE_USER=${I2B2_DS_HIVE_USER}
      - DS_HIVE_PASS=${I2B2_DS_HIVE_PASS}
      - DS_HIVE_DB=${I2B2_DS_HIVE_DB}

      - DS_WD_IP=${I2B2_DS_WD_IP} #WD Db env not available
      - DS_WD_PORT=${I2B2_DS_WD_PORT}
      - DS_WD_USER=${I2B2_DS_WD_USER}
      - DS_WD_PASS=${I2B2_DS_WD_PASS}
      - DS_WD_DB=${I2B2_DS_WD_DB}
     
#    ports:
#      - "8080:8080"
#      - "9990:9990"
    networks:
      - i2b2-net
    depends_on:
     
      - i2b2-pg

  i2b2-pg-vol-loader:
    image: i2b2/i2b2-pg-vol:${I2B2_PG_TAG}
    container_name: i2b2-pg-vol-loader
    volumes:
      - i2b2-pg-vol:/var/lib/postgresql/data
    entrypoint: /bin/sh
    networks:
      - i2b2-net

  i2b2-pg:
    image: postgres:12
    container_name: i2b2-pg
#    ports:
#      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${I2B2_PG_PASS}
    networks:
      - i2b2-net
    volumes:
      - i2b2-pg-vol:/var/lib/postgresql/data
    depends_on:
      - i2b2-pg-vol-loader
  

  gitlab:
    image: gitlab/gitlab-ce:14.10.5-ce.0 
    hostname: gitlab
    container_name: gitlab
    restart: unless-stopped
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        gitlab_rails['gitlab_shell_ssh_port'] = 8822
        gitlab_rails['initial_root_password'] = 'adminadmin'
    depends_on:
      - gitlab-etc-vol-loader 
      - gitlab-var-vol-loader
    volumes:   
      - gitlab-vol-etc:/etc/gitlab
      - gitlab-vol-var:/var/opt/gitlab
    ports:
      - "8090:80"
      - "8822:22"
    networks:
      - i2b2-net
      

  gitlab-runner:
    image: gitlab/gitlab-runner:v15.1.1   
    restart: always
    restart: unless-stopped
    depends_on:
      - gitlab
      - gitlab-runner-etc-vol-loader
    container_name: gitlab-runner
    volumes:
      - gitlab-runner-vol-etc:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - i2b2-net

  gitlab-etc-vol-loader:
    image: i2b2/gitlab-etc-vol:${I2B2_GITLAB_TAG}
    container_name: gitlab-etc-vol-loader
    volumes:
      - gitlab-vol-etc:/etc/gitlab
    entrypoint: /bin/sh
    networks:
      - i2b2-net
  
  gitlab-var-vol-loader:
    image: i2b2/gitlab-var-vol:${I2B2_GITLAB_TAG}
    container_name: gitlab-var-vol-loader
    volumes:
      - gitlab-vol-var:/var/opt/gitlab
    entrypoint: /bin/sh
    networks:
      - i2b2-net
  
  gitlab-runner-etc-vol-loader:
    image: i2b2/gitlab-runner-etc-vol:${I2B2_GITLAB_RUNNER_TAG}
    container_name: gitlab-runner-etc-vol-loader
    volumes:
      - gitlab-runner-vol-etc:/etc/gitlab-runner
    entrypoint: /bin/sh
    networks:
      - i2b2-net



  ibmdb2:
    image: i2b2/ibmdb2:{I2B2_GITLAB_IBMDB2_TAG} #ibmcom/db2 #
    container_name: ibmdb2    
    privileged: true
    ports:
      - 50000:50000
    environment:
      DB2INST1_PASSWORD: ibmdb2pass
      LICENSE: accept
      DBNAME: testdb
    # command: db2start
    depends_on:
      - ibmdb2-db-vol-loader
      - ibmdb2-var-vol-loader
    volumes:
      - ibmdb2-db-vol:/database
      - ibmdb2-var-vol:/var
    networks:
      - i2b2-net


  ibmdb2-db-vol-loader:
    image: i2b2/ibmdb2-db-vol:{I2B2_GITLAB_IBMDB2_TAG}
    container_name: ibmdb2-db-vol-loader
    volumes:
      - ibmdb2-db-vol:/database
    entrypoint: /bin/sh
    networks:
      - i2b2-net  
  
  
  ibmdb2-var-vol-loader:
    image: i2b2/ibmdb2-var-vol:{I2B2_GITLAB_IBMDB2_TAG}
    container_name: ibmdb2-var-vol-loader
    volumes:
      - ibmdb2-var-vol:/var
    entrypoint: /bin/sh
    networks:
      - i2b2-net      

  

  i2b2-mssql:
    image: mcr.microsoft.com/mssql/server:2017-latest
    restart: always
    container_name: i2b2-mssql
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${I2B2_MSSQL_SA_PASSWORD}
    networks:
      - i2b2-net
    volumes:
      - i2b2-mssql-vol-osr:/var/opt/mssql
    depends_on:
      - i2b2-mssql-vol-osr
  
  i2b2-mssql-vol-osr:
    image: i2b2/i2b2-mssql-vol-gitlab-source:{I2B2_GITLAB_MSSQL_SOURCE}
    container_name: i2b2-mssql-vol-osr
    volumes:
      - i2b2-mssql-vol-osr:/var/opt/mssql
    entrypoint: /bin/sh
    networks:
      - i2b2-net


networks:
  i2b2-net:
    name: i2b2-net
    driver: bridge
volumes:
  i2b2-pg-vol:
    name: i2b2-pg-vol
  gitlab-vol-etc:
    name: gitlab-vol-etc
  gitlab-vol-var: 
    name: gitlab-vol-var
  gitlab-runner-vol-etc: 
    name: gitlab-runner-vol-etc
  i2b2-mssql-vol-osr:
    name: i2b2-mssql-vol-osr     
  ibmdb2-db-vol: 
    name: ibmdb2-db-vol 
  ibmdb2-var-vol:
    name: ibmdb2-var-vol  


